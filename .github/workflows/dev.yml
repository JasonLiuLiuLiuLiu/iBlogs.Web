name: dev

on:
  push:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Runs a single command using the runners shell
      - name: npm install
        run:
          npm install
          # Runs a single command using the runners shell
      - name: npm build
        run: npm run build

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_REPO }}
          tags: ${{ github.run_number }}

  deploy:
    name: deploy container
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: deploy container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          command_timeout: 30m
          script: |
            docker stop ${{ secrets.DOCKER_CONTAINER_NAME }}
            docker rm ${{ secrets.DOCKER_CONTAINER_NAME }}
            docker run --restart always --name ${{ secrets.DOCKER_CONTAINER_NAME }} -d -p 8081:80 ${{ secrets.DOCKER_REPO }}:${{ github.run_number }} --spring.datasource.url="${{secrets.SPRING_DATASOURCE_URL}}" --spring.redis.host="${{secrets.SPRING_REDIS_HOST}}"
